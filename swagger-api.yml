openapi: 3.0.3
info:
  title: Pizzaria Miamor
  description: |-
   API for controlling Products, Users and Promotions
  termsOfService: http://swagger.io/terms/
  contact:
    email: arthurpiloto.github@email.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://
tags:
  - name: product
    description: Everything about Products
  - name: type
    description: Everything about Types
paths:
  /v1/products:
    get:
      tags:
        - product
      summary: List of all Products
      description: List of all Products
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Products'
        '404':
          description: Not Found
        '500':
          description: Internal Error
  /v1/product/{productID}:
    get:
      tags:
        - product
      summary: Find a Product by ID
      description: Find a Product by ID
      parameters:
        - name: productID
          in: path
          description: ID of the Product
          required: true
          schema:
            type: integer
            format: int64
            example: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Products'
        '404':
          description: Not Found
        '500':
          description: Internal Error
    put:
      tags:
        - product
      summary: Update an existing Product
      description: Update an existing Product
      parameters:
        - name: productID
          in: path
          description: ID of Product to return
          required: true
          schema:
            type: integer
            format: int64
            example: 10
      requestBody:
        content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Item updated successfully
        '400':
          description: Empty Body, Required Fields or Required ID
        '415':
          description: Incorrect Content-Type
        '500':
          description: Internal Error
    delete:
      tags:
        - product
      summary: Delete a Product
      description: Delete a Product
      parameters:
        - name: productID
          in: path
          description: ID of Product to return
          required: true
          schema:
            type: integer
            format: int64
            example: 10
      responses:
        '200':
          description: Item deleted successfully
        '400':
          description: Required ID
        '500':
          description: Internal Error
  /v1/product:
    post:
      tags:
        - product
      summary: Add a new Product
      description: Add a new Product
      requestBody:
        description: Add a new Product
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        required: true
      responses:
        '201':
          description: Item created successfully
        '400':
          description: Empty Body or Required Fields
        '413':
          description: Number of Characters Exceeded
        '415':
          description: Incorrect Content-Type
        '500':
          description: Internal Error
  /v1/types:
    get:
      tags:
        - type
      summary: List of all Types
      description: List of all Types
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Types'
        '404':
          description: Not Found
        '500':
          description: Internal Error
  /v1/type/{typeID}:
    get:
      tags:
        - type
      summary: Find a Type by ID
      description: Find a Type by ID
      parameters:
        - name: typeID
          in: path
          description: ID of the Product
          required: true
          schema:
            type: integer
            format: int64
            example: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Products'
        '404':
          description: Not Found
        '500':
          description: Internal Error
    put:
      tags:
        - type
      summary: Update an existing Type
      description: Update an existing Type
      parameters:
        - name: typeID
          in: path
          description: ID of Type to return
          required: true
          schema:
            type: integer
            format: int64
            example: 10
      requestBody:
        content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Type'
      responses:
        '200':
          description: Item updated successfully
        '400':
          description: Empty Body, Required Fields or Required ID
        '415':
          description: Incorrect Content-Type
        '500':
          description: Internal Error
    delete:
      tags:
        - type
      summary: Delete a Tyoe
      description: Delete a Type
      parameters:
        - name: typeID
          in: path
          description: ID of Type to return
          required: true
          schema:
            type: integer
            format: int64
            example: 10
      responses:
        '200':
          description: Item deleted successfully
        '400':
          description: Required ID
        '500':
          description: Internal Error
  /v1/type:
    post:
      tags:
        - type
      summary: Add a new Type
      description: Add a new Type
      requestBody:
        description: Add a new Type
        content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
        required: true
      responses:
        '201':
          description: Item created successfully
        '400':
          description: Empty Body or Required Fields
        '413':
          description: Number of Characters Exceeded
        '415':
          description: Incorrect Content-Type
        '500':
          description: Internal Error
components:
  schemas:
    Products:
      required:
        - nome
        - preco
        - foto
      type: object
      properties:
        id:
          type: integer
          example: 10
        nome:
          type: string
          example: Pizza de Mussarela
        preco:
          type: integer
          format: float
          example: 29.90
        foto:
          type: string
          example: https://storage.googleapis.com/senai-pizzaria.appspot.com/1669297933575.jpeg
        qtde_favorito:
          type: integer
          example: 1500
        categoria:
          type: string
          example: Pizza
        tipo:
          type: string
          example: Salgada
    Product:
      required:
        - nome
        - preco
        - foto
      type: object
      properties:
        nome:
          type: string
          example: Pizza de Mussarela
        preco:
          type: integer
          format: float
          example: 29.90
        foto:
          type: string
          example: https://storage.googleapis.com/senai-pizzaria.appspot.com/1669297933575.jpeg
        id_categoria:
          type: integer
          example: 3
        id_tipo:
          type: integer
          example: 1
    Types:
      required:
        - tipo
      type: object
      properties:
        id:
          type: integer
          example: 1
        tipo:
          type: string
          example: Salgada
    Type:
      required:
        - tipo
      type: object
      properties:
        tipo:
          type: string
          example: Salgada
  requestBodies:
    Product:
      description: Product object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Products'